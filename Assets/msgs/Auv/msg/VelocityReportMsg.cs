//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Auv
{
    [Serializable]
    public class VelocityReportMsg : Message
    {
        public const string k_RosMessageName = "auv_msgs/VelocityReport";
        public override string RosMessageName => k_RosMessageName;

        public double vx;
        public double vy;
        public double vz;
        public double altitude;
        public bool valid;
        public double fom;
        public double[] covariance;
        public double time_of_validity;
        public double time_of_transmission;
        public double time;
        public bool status;

        public VelocityReportMsg()
        {
            this.vx = 0.0;
            this.vy = 0.0;
            this.vz = 0.0;
            this.altitude = 0.0;
            this.valid = false;
            this.fom = 0.0;
            this.covariance = new double[0];
            this.time_of_validity = 0.0;
            this.time_of_transmission = 0.0;
            this.time = 0.0;
            this.status = false;
        }

        public VelocityReportMsg(double vx, double vy, double vz, double altitude, bool valid, double fom, double[] covariance, double time_of_validity, double time_of_transmission, double time, bool status)
        {
            this.vx = vx;
            this.vy = vy;
            this.vz = vz;
            this.altitude = altitude;
            this.valid = valid;
            this.fom = fom;
            this.covariance = covariance;
            this.time_of_validity = time_of_validity;
            this.time_of_transmission = time_of_transmission;
            this.time = time;
            this.status = status;
        }

        public static VelocityReportMsg Deserialize(MessageDeserializer deserializer) => new VelocityReportMsg(deserializer);

        private VelocityReportMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.vx);
            deserializer.Read(out this.vy);
            deserializer.Read(out this.vz);
            deserializer.Read(out this.altitude);
            deserializer.Read(out this.valid);
            deserializer.Read(out this.fom);
            deserializer.Read(out this.covariance, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.time_of_validity);
            deserializer.Read(out this.time_of_transmission);
            deserializer.Read(out this.time);
            deserializer.Read(out this.status);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.vx);
            serializer.Write(this.vy);
            serializer.Write(this.vz);
            serializer.Write(this.altitude);
            serializer.Write(this.valid);
            serializer.Write(this.fom);
            serializer.WriteLength(this.covariance);
            serializer.Write(this.covariance);
            serializer.Write(this.time_of_validity);
            serializer.Write(this.time_of_transmission);
            serializer.Write(this.time);
            serializer.Write(this.status);
        }

        public override string ToString()
        {
            return "VelocityReportMsg: " +
            "\nvx: " + vx.ToString() +
            "\nvy: " + vy.ToString() +
            "\nvz: " + vz.ToString() +
            "\naltitude: " + altitude.ToString() +
            "\nvalid: " + valid.ToString() +
            "\nfom: " + fom.ToString() +
            "\ncovariance: " + System.String.Join(", ", covariance.ToList()) +
            "\ntime_of_validity: " + time_of_validity.ToString() +
            "\ntime_of_transmission: " + time_of_transmission.ToString() +
            "\ntime: " + time.ToString() +
            "\nstatus: " + status.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
